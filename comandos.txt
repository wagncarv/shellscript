1 - Para executar arquivo '~.sh', basta digitar './nome_do_arquivo.sh'
2 - $USER é uma variável de ambiente que representa o usuário atual.
3 - Definir variável shell script com comando: 
    Exemplo: exibir=`ls -l`
    Barra invertida \ serve para ignorar o caractere seguinte.
    Ponto e vírgula ; indica quebra de linha

4 - COMANDOS:
stdout = saída padrão, tela
stdin = entrada padrão, teclado
stderr = saída de erro padrão, tela
> = redirecionamento de saída (sobrescreve)
>> = redirecionamento de saída (incremento)
2> = redirecionamento de erro
< = redirecionamento de entrada
| = concatena uma saída em uma entrada
/dev/null = lixeira no linux
ps aux = processos em execução na máquina
grep = pesquisa
read = lê entrada e a armazena
&1 = saída padrão (tela)

5 - EXPRESSÕES ARITMÉTICAS Shellscript(expr, echo):
    (COMANDO expr)
    expr 1 + 1
    expr 2 \* 2
    expr 2 - 2
    expr 2 \ 2

    (COMANDO echo)
    echo $(((2+3)*5))
    tres=3
    echo $(((2+tres)*5))

6 - VARIÁVEIS:
    $0 a $9 Parâmetros possíveis
    ${10} Referencia ao parâmetro 10
    $0 Significa o próprio programa
    $* Utiliza todos os parâmetros usados como string única
    $? Saber se foi executado com sucesso ou não [1 ou 0]
    $# Saber quantidade de parâmetros inseridos pelo usuário

7 - COMANDOS DE COMPARAÇÃO:
    -eq igual
    -ne diferente
    -gt maior
    -lt menor
    -o ou
    -d se for um diretório
    -e se existir
    -z se estiver vazio
    -f se contiver texto
    -O se o usuário for o dono
    -r se o arquivo puder ser lido
    -w se o arquivo puder ser alterado
    -x se o arquivo puder ser executado

8 - ESTRUTURAS DE CONTROLE
    if [4 -gt 3] # Se 4 for maior que 3
    if [$2 -lt 4] # Se o segundo parâmetro for menor que 4
    if [$var1 -eq $var2] # Se a variável 1 for igual a variável 2
    if [`ls /teste` -z] # Se diretório estiver vazio
    if [bola = bola] # comparação entre strings
    if [$var3 = bola] # compara o conteúdo da variável 3 com a string "bola"

9 - LAÇOS DE REPETIÇÃO:
### for ####
for((x=0;x<=10;x++))
do
    echo "$x"
done

for i in $(seq 10) # i assumirá valores de 0 a 10

for i in $(cat arquivo.txt) # i assumirá valor de cada linha i

for i in param(1-5) # i assumirá valores de parãmetros 1 a 5

### while ####
while [expressão]
do
    <comando1> 
    <comando2>
done

### until ####
until [expressão]
do
    <comando1> 
    <comando2>
done



